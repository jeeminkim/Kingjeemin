module csm(
input [7:0]SW,
input CLOCK_50,
output [6:0]HEX0,HEX1,HEX4,HEX6
);
reg [7:0]in_a,in_b;
reg [7:0]out;
wire [7:0]out_wire;

always @(posedge CLOCK_50)
begin
in_a=SW;
in_b=SW;
end

carry_save in_out(.a(in_a[7:4]),.b(in_b[3:0]),.p(out_wire[7:0]));

always@(posedge CLOCK_50) 
begin        
out=out_wire;
end

bittoseg d0(.sw(out[3:0]),.HEX(HEX0));
bittoseg d1(.sw(out[7:4]),.HEX(HEX1));
bittoseg d2(.sw(SW[3:0]),.HEX(HEX4));
bittoseg d3(.sw(SW[7:4]),.HEX(HEX6));
endmodule

module carry_save(
input[3:0]a,b,
output [7:0]p
);

wire[2:0]carry0,carry1,carry2,carry3;
wire[1:0]sp0,sp1,sp2;

assign p[0] = a[0] & b[0];

HA p1_out(.x(a[1]&b[0]),.y(a[0]&b[1]),.s(p[1]),.c(carry0[0]));

HA p2_1(.x(a[2]&b[0]),.y(a[1]&b[1]),.s(sp0[0]),.c(carry0[1]));
FA p2_out(.x(sp0[0]),.y(a[0]&b[2]),.cin(carry0[0]),.s(p[2]),.c(carry1[0]));

HA p3_1(.x(a[3]&b[0]),.y(a[2]&b[1]),.s(sp0[1]),.c(carry0[2]));
FA p3_2(.x(sp0[1]),.y(a[1]&b[2]),.cin(carry0[1]),.s(sp1[0]),.c(carry1[1]));
FA p3_out(.x(sp1[0]),.y(a[0]&b[3]),.cin(carry1[0]),.s(p[3]),.c(carry2[0]));

FA p4_1(.x(a[3]&b[1]),.y(a[2]&b[2]),.cin(carry0[2]),.s(sp1[1]),.c(carry1[2]));
FA p4_2(.x(sp1[1]),.y(a[1]&b[3]),.cin(carry1[1]),.s(sp2[0]),.c(carry2[1]));
HA p4_out(.x(carry2[0]),.y(sp2[0]),.s(p[4]),.c(carry3[0]));

FA p5_1(.x(a[3]&b[2]),.y(a[2]&b[3]),.cin(carry2[1]),.s(sp2[1]),.c(carry2[2]));
FA p5_out(.x(carry2[1]),.y(sp2[1]),.cin(carry3[0]),.s(p[5]),.c(carry3[1]));

FA p6_out(.x(carry2[2]),.y(a[3]&b[3]),.cin(carry3[1]),.s(p[6]),.c(p[7]));

endmodule

module FA(
input x,y,cin,
output s,c
);

assign s = cin^(x^y);
assign c = (x&~y&cin)|(~x&y&cin)|(x&y);

endmodule

module HA(
input x,y,
output s,c
);

assign s = x^y;
assign c = x&y;

endmodule

module bittoseg(
input [3:0]sw,
output reg[6:0]HEX
);

always @(*)begin
	case(sw)
  4'b0000: HEX = 7'b1000000; //0
  4'b0001: HEX = 7'b1111001; //1
  4'b0010: HEX = 7'b0100100; //2
  4'b0011: HEX = 7'b0110000; //3
  4'b0100: HEX = 7'b0011001; //4
  4'b0101: HEX = 7'b0010010; //5
  4'b0110: HEX = 7'b0000010; //6
  4'b0111: HEX = 7'b1111000; //7
  4'b1000: HEX = 7'b0000000; //8
  4'b1001: HEX = 7'b0010000; //9
  4'b1010: HEX = 7'b0001000; //10 A
  4'b1011: HEX = 7'b0000011; //11 B
  4'b1100: HEX = 7'b1000110; //12 C
  4'b1101: HEX = 7'b0100001; //13 D
  4'b1110: HEX = 7'b0000110; //14 E
  4'b1111: HEX = 7'b0001110; //15 F
  
  default: HEX = 7'b0000000; 
  endcase
  
  end

endmodule

